Задание

У тебя есть код сервера и клиента для простого чата на TCP.

Задача — добавить недостающие части кода и доработать функциональность чата.

import (
"bufio"
"fmt"
"net"
"os"
)
type client struct {
conn net.Conn
name string
ch chan<- string
}
var (
// канал для всех входящих клиентов
entering = make(chan client)
// канал для сообщения о выходе клиента
leaving = make(chan client)
// канал для всех сообщений
messages = make(chan string)
)
func main() {
listener, err := net.Listen("tcp", "localhost:8000")
if err != nil {
fmt.Println(err)
os.Exit(1)
}
go broadcaster()
for {
conn, err := listener.Accept()
if err != nil {
fmt.Println(err)
continue
}
go handleConn(conn)
}
}
// broadcaster рассылает входящие сообщения всем клиентам
// следит за подключением и отключением клиентов
func broadcaster() {
// здесь хранятся все подключенные клиенты
clients := make(map[client]bool)
}
// handleConn обрабатывает входящие сообщения от клиента
func handleConn(conn net.Conn) {
    ch := make(chan string)
go clientWriter(conn, ch)
who := conn.RemoteAddr().String()
cli := client{conn, who, ch}
ch <- "You are " + who
messages <- who + " has arrived"
entering <- cli
input := bufio.NewScanner(conn)
for input.Scan() {
messages <- who + ": " + input.Text()
messages <- who + " has left"
conn.Close()
}
// clientWriter отправляет сообщения текущему клиенту
func clientWriter(conn net.Conn, ch <-chan string) {
}
// Код клиента
package main
import (
"bufio"
"fmt"
"net"
"os"
)
func main() {
// подключиться к серверу
conn, err := net.Dial("tcp", "localhost:8000")
if err != nil {
fmt.Println(err)
os.Exit(1)
}
// запустить горутину, которая будет читать все сообщения от сервера и выводить их в консоль
go clientReader(conn)
// читать сообщения от stdin и отправлять их на сервер
scanner := bufio.NewScanner(os.Stdin)
}
// clientReader выводит на экран все сообщения от сервера
func clientReader(conn net.Conn) {
}

Критерии приемки

Сервер должен принимать входящие соединения на порту 8000
Когда клиент подключается, сервер должен отправить сообщение «You are [адрес клиента]»
Когда клиент отправляет сообщение, сервер должен отправить его всем подключенным клиентам в
формате «[адрес клиента]: [сообщение]».
Когда клиент отключается, сервер должен отправить сообщение «[адрес клиента] has left».
Клиент должен подключаться к серверу на порту 8000
Клиент должен отправлять введенные с клавиатуры сообщения на сервер.
Клиент должен выводить полученные сообщения от сервера на экран.
Для покрытия тестами функционал должен быть выделен в отдельные структуры и методы.
Функционал должен быть покрыт тестами на 80%.

Решение расположи по следующему пути: course3/2.server/1.server_tcp/task3.2.1.1