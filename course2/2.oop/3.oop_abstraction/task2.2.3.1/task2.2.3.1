Задание

Разработай программу для планирования интерфейса на языке программирования Golang. Программа
должна генерировать SQL-запросы для создания таблицы и вставки данных в базу данных SQLite.



package main

import (
    "fmt"
    "github.com/brianvoe/gofakeit/v6"
    "reflect"
    "strings"
)

// Определение структуры пользователя
type User struct {
	ID        int    `db_field:"id" db_type:"SERIAL PRIMARY KEY"`
	FirstName string `db_field:"first_name" db_type:"VARCHAR(100)"`
	LastName  string `db_field:"last_name" db_type:"VARCHAR(100)"`
	Email     string `db_field:"email" db_type:"VARCHAR(100) UNIQUE"`
}

type Tabler interface {
	//
}

// Интерфейс для генерации SQL-запросов
type SQLGenerator interface {
	//
}

// Интерфейс для генерации фейковых данных
type FakeDataGenerator interface {
	//
}

func main() {
	sqlGenerator := &SQLiteGenerator{}
	fakeDataGenerator := &GoFakeitGenerator{}
	user := User{}
	sql := sqlGenerator.CreateTableSQL(&user)
	fmt.Println(sql)
	for i := 0; i < 34; i++ {
		fakeUser := fakeDataGenerator.GenerateFakeUser()
		query := sqlGenerator.CreateInsertSQL(&fakeUser)
		fmt.Println(query)
	}
}

Вспомогательные материалы

Критерии приемки

Создай интерфейс Tabler для получения имени таблицы.
Интерфейс Tabler содержит метод TableName, который возвращает имя таблицы.
Создан интерфейс SQLGenerator для генерации SQL-запросов и интерфейс для генерации фейковых
данных.
Интерфейс SQLGenerator содержит метод CreateTableSQL, который принимает аргумент table с типом
Tabler и возвращает строку с SQL-запросом для создания таблицы.
Интерфейс SQLGenerator содержит метод CreateInsertSQL, который принимает аргумент model с
типом Tabler и возвращает строку с SQL-запросом для вставки данных в таблицу.
Создан интерфейс FakeDataGenerator для генерации фейковых данных.

Решение расположи по следующему пути: course2/2.oop/3.oop_abstraction/task2.2.3.1