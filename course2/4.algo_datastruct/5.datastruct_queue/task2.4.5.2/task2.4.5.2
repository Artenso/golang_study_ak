Задание

Необходимо реализовать систему управления историей браузера.

В каждый момент времени пользователь может либо посетить новый URL — адрес либо перейти назад.
Для этого необходимо разработать стек, где последний посещенный сайт будет первым для возврата
(принцип LIFO).

package main
import (
"fmt"
)
type BrowserHistory struct {
stack []string
}
func (h *BrowserHistory) Visit(url string) {
}
func (h *BrowserHistory) Back() {
}
func (h *BrowserHistory) PrintHistory() {
}
func main() {
history := &BrowserHistory{}
history.Visit("www.google.com")
history.Visit("www.github.com")
history.Visit("www.openai.com")
history.Back()
history.PrintHistory()
}

Вывод:

Возврат к www.github.com
История браузера:
www.github.com
www.google.com

Критерии приемки

Система позволяет пользователю посещать новые URL-адреса и возвращаться назад.
Последний посещенный сайт является первым для возврата (принцип LIFO).
Если история пуста, при попытке возврата выводится сообщение «Нет больше истории для возврата».
При посещении нового URL-адреса выводится сообщение «Посещение [URL-адрес]».
При возврате к предыдущему URL-адресу выводится сообщение «Возврат к [URL-адрес]».
При выводе истории браузера выводится сообщение «История браузера:» и список посещенных URL-
адресов в обратном порядке.

Решение расположи по следующему пути: course2/4.algo_datastruct/5.datastruct_queue/task2.4.5.2