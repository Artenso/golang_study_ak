Задание

Реализуй программу для управления парковкой автомобилей. Места распределены в виде линии, и
автомобили могут въехать с одного конца и выехать с другого. Автомобиль, который приехал последним,
должен быть последним, кто покинет парковку (принцип LILO). Необходимо управлять данными о
прибывших автомобилях и обеспечить эффективное использование мест на парковке.

package main

import (
	"container/list"
)

type Car struct {
	LicensePlate string
}
type ParkingLot struct {
	space *list.List
}

func NewParkingLot() *ParkingLot {
	return &ParkingLot{space: list.New()}
}
func (p *ParkingLot) Park(c Car) {
}
func (p *ParkingLot) Leave() {
}
func main() {
	parkingLot := NewParkingLot()
	parkingLot.Park(Car{LicensePlate: "ABC-123"})
	parkingLot.Park(Car{LicensePlate: "XYZ-789"})
	parkingLot.Leave()
	parkingLot.Leave()
	parkingLot.Leave()
}


Вывод:

Автомобиль XYZ-789 покинул парковку.
Парковка пуста.


Критерии приемки

Парковка реализована в виде линии, где автомобили могут въезжать с одного конца и выезжать с
другого.
Автомобиль, который приехал последним, становится последним, кто покинет парковку (принцип
LILO).
При парковке автомобиля выводится сообщение вида «Автомобиль {номер_автомобиля}
припаркован.»
Когда автомобиль покидает парковку, выводится сообщение вида «Автомобиль {номер_автомобиля}
покинул парковку.»
Если парковка пуста, выводится сообщение «Парковка пуста.»

Решение расположи по следующему пути: course2/4.algo_datastruct/5.datastruct_queue/task2.4.5.3