Задание

Необходимо реализовать структуру данных B-дерева в языке программирования Golang.

B-дерево является сбалансированным деревом поиска, которое позволяет эффективно хранить и
обрабатывать большие объемы данных. Твоя реализация должна включать следующие методы:

"fmt"
"github.com/google/btree"
)
type User struct {
ID int
Name string
Age int
}
func (u User) Less(than btree.Item) bool {
return u.ID < than.(User).ID
}
type BTree struct {
tree *btree.BTree
}
func NewBTree(degree int) *BTree {
}
func (bt *BTree) Insert(user User) {
}
func (bt *BTree) Search(id int) *User {
}
func main() {
bt := NewBTree(2)
users := []User{
{1, "Alice", 30},
{2, "Bob", 25},
{3, "Charlie", 35},
// добавьте больше пользователей при необходимости
}
for _, user := range users {
bt.Insert(user)
}
if user := bt.Search(2); user != nil {
fmt.Printf("Найден пользователь: %v\n", *user)
} else {
fmt.Println("Пользователь не найден")
}
}

Критерии приемки

Реализована структура данных B-дерево.
Код покрыт тестами на 100%.

Решение расположи по следующему пути: course2/4.algo_datastruct/4.datastruct_tree/task2.4.4.2