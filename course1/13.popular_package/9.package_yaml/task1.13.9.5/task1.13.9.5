Задание

Реализуй функцию unmarshal(data []byte, v interface{}) error, которая будет выполнять декодирование
данных в формате YAML или JSON в соответствующую структуру данных.

func unmarshal(data []byte, v interface{}) error {
    // Ваш код для декодирования данных
}

Пример использования
type Person struct {
    Name string `json:"name" yaml:"name"`
    Age int `json:"age" yaml:"age"`
}

func main() {
    data := []byte(`{"name":"John","age":30}`)
    var person Person
    err := unmarshal(data, &person)
    if err != nil {
        fmt.Println("Ошибка декодирования данных:", err)
        return
    }
    fmt.Println("Имя:", person.Name)
    fmt.Println("Возраст:", person.Age)
}

Ожидаемый результат

Имя: John
Возраст: 30

Критерии приемки

Функция должна успешно выполнять декодирование данных в формате YAML или JSON в
соответствующую структуру данных.
Если данные не могут быть корректно декодированы, функция должна возвращать ошибку.
Функция должна быть универсальной и поддерживать как формат YAML, так и JSON.
Функция должна быть написана на языке программирования Golang.
Пожалуйста, обрати внимание, что в этом примере используется JSON, но функция unmarshal должна
также поддерживать декодирование данных в формате YAML.

Решение расположи по следующему пути: course1/13.popular_package/9.package_yaml/task1.13.9.5