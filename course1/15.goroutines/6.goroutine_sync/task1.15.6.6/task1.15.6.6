Задание

Реализуй конкурентно-безопасный кэш, используя структуру данных sync.Map. Кэш должен быть
представлен в виде структуры Cache, внутри которой будет находиться sync.Map. Кэш должен иметь
методы Set и Get, которые позволят устанавливать и получать значения из кэша соответственно.

// Пример реализации конкурентно-безопасного кэша с использованием sync.Map
type Cache struct {
}
func (c *Cache) Set(key string, value interface{}) {
}
func (c *Cache) Get(key string) (interface{}, bool) {
}

Критерии приемки

Используй имя "data" для поля структуры.
Кэш должен быть реализован с использованием sync.Map.
Кэш должен иметь методы Set и Get.
Метод Set должен позволять устанавливать значения в кэш по ключу.
Метод Get должен возвращать значение из кэша по ключу.
Кэш должен быть конкурентно-безопасным, то есть поддерживать безопасное использование из
нескольких горутин.
Кэш должен успешно проходить тесты на корректность работы методов Set и Get.

Решение расположи по следующему пути: course1/15.gorounes/6.goroune_sync/task1.15.6.6