Задание

Разработай программу на языке Golang, которая демонстрирует применение таймера с горутинами.

Программа должна выполнять следующие действия:
1 Создать горутину, которая будет выполнять определенную задачу.
2 Запустить таймер, который будет срабатывать через определенный интервал времени.
3 Остановить таймер по истечении времени горутина при этом должна завершить свою работу.
4 Вывести результат работы горутины.

func main() {
    stop := make(chan bool)
    go func() {
        time.Sleep(2 * time.Second)
        fmt.Println("Горутина завершила работу")
        stop <- true
    }()

    timer := time.NewTimer(5 * time.Second)
    data := NotifyOnTimer(timer, stop)
    for v := range data {
        fmt.Println(v)
    }
    /*
    Результат работы программы:
    Горутина завершила работу
    Горутина завершила работу раньше, чем таймер сработал
    */
}

func NotifyOnTimer(timer *time.Timer, stop chan bool) <-chan string {
    //...
}

Критерии приемки

Корректное создание и запуск горутины.
Таймер срабатывает через указанный интервал времени.
По истечении времени таймер останавливается.
Горутина завершает свою работу после остановки таймера.
Корректный вывод результата работы горутины.

Решение расположи по следующему пути: course1/15.gorounes/1.gorounes_run/task1.15.1.1

Напоминаем, что при прохождении курса необходимо использовать версию Golang 1.19